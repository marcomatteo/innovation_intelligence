07-05-2020 17:07:52 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_length) Certificate column lengths:
0 : 11,
1 : 6,
2 : 7,
3 : 4,
4 : 11,
5 : 11,
6 : 11,
7 : 11,
8 : 11,
9 : 11,
10 : 11,
11 : 10,
12 : 11,
13 : 10,
14 : 11,
15 : 10,
16 : 10,
17 : 11
07-05-2020 17:07:53 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Certificate column nullables:
0 : False,
1 : False,
2 : False,
3 : False,
4 : False,
5 : False,
6 : True,
7 : False,
8 : True,
9 : False,
10 : False,
11 : False,
12 : False,
13 : False,
14 : False,
15 : False,
16 : False,
17 : False
07-05-2020 17:07:53 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Wrong setup for Crediti esigibili entro l'esercizio successivo column.Expected nullable False not True 
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 128, in test_check_column_nullables
    self.assertFalse(cert_check_nullables[num])
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 699, in assertFalse
    raise self.failureException(msg)
AssertionError: True is not false
07-05-2020 17:07:53 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Wrong setup for Debiti esigibili entro l'esercizio successivo column.Expected nullable False not True 
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 128, in test_check_column_nullables
    self.assertFalse(cert_check_nullables[num])
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 699, in assertFalse
    raise self.failureException(msg)
AssertionError: True is not false
07-05-2020 17:07:53 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Found wrong column nullables for Crediti esigibili entro l'esercizio successivo, Debiti esigibili entro l'esercizio successivo columns
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 138, in test_check_column_nullables
    self.assertTrue(len(invalid_column_list) == 0)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 705, in assertTrue
    raise self.failureException(msg)
AssertionError: False is not true
07-05-2020 17:07:53 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_number) Certificate 18 column number
07-05-2020 17:07:53 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_number) Wrong column number: 18
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 41, in test_check_column_number
    self.assertEqual(expected_column_number, cert_column_number)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 845, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 18
07-05-2020 17:07:53 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_types) Certificate column types: 
0 : object,
1 : object,
2 : object,
3 : object,
4 : object,
5 : object,
6 : object,
7 : object,
8 : object,
9 : object,
10 : object,
11 : object,
12 : object,
13 : object,
14 : object,
15 : object,
16 : object,
17 : object
07-05-2020 17:07:53 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_types) Wrong column types:
0 : object,
1 : object,
2 : object,
3 : object,
4 : object,
5 : object,
6 : object,
7 : object,
8 : object,
9 : object,
10 : object,
11 : object,
12 : object,
13 : object,
14 : object,
15 : object,
16 : object,
17 : object
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 61, in test_check_column_types
    self.assertEqual(expected_column_types, cert_column_types)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1058, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1040, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [] != [dtype('O'), dtype('O'), dtype('O'), dtype[169 chars]'O')]

Second list contains 18 additional elements.
First extra element 0:
dtype('O')

- []
+ [dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O'),
+  dtype('O')]
07-05-2020 17:07:53 DEBUG tests.test_acceptance.acceptance_base_class (test_check_file_extension) Certificate xlsx file extension
