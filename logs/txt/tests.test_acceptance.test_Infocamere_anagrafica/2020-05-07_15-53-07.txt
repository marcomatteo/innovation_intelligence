07-05-2020 15:54:42 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_length) Certificate column lengths:
0 : 11,
1 : 6,
2 : 20,
3 : 7,
4 : 6,
5 : 9,
6 : 9,
7 : 2,
8 : 50,
9 : 20,
10 : 19,
11 : 19,
12 : 19,
13 : 19,
14 : 19,
15 : 19,
16 : 19,
17 : 19,
18 : 19,
19 : 200,
20 : 50,
21 : 5,
22 : 5,
23 : 35,
24 : 25,
25 : 30,
26 : 4,
27 : 4,
28 : 5,
29 : 11,
30 : 15,
31 : 14,
32 : 200,
33 : 23,
34 : 15,
35 : 50,
36 : 38,
37 : 38,
38 : 27,
39 : 0,
40 : 2,
41 : 2,
42 : 2,
43 : 2,
44 : 13,
45 : 13,
46 : 13,
47 : 64
07-05-2020 15:54:42 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_length) Wrong length for PRV - Provincia column.Expected 2 
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 92, in test_check_column_length
    cert_check_length[i]
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1257, in assertGreaterEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: 2 not greater than or equal to 6
07-05-2020 15:54:42 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_length) Found wrong column lengths for PRV - Provincia columns
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 104, in test_check_column_length
    self.assertTrue(len(invalid_column_list) == 0)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 705, in assertTrue
    raise self.failureException(msg)
AssertionError: False is not true
07-05-2020 15:54:42 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Certificate column nullables:
0 : False,
1 : False,
2 : True,
3 : False,
4 : False,
5 : True,
6 : True,
7 : False,
8 : False,
9 : False,
10 : True,
11 : True,
12 : True,
13 : True,
14 : True,
15 : True,
16 : True,
17 : True,
18 : True,
19 : False,
20 : True,
21 : True,
22 : True,
23 : True,
24 : True,
25 : True,
26 : True,
27 : True,
28 : True,
29 : True,
30 : True,
31 : True,
32 : True,
33 : True,
34 : False,
35 : True,
36 : True,
37 : True,
38 : True,
39 : True,
40 : True,
41 : True,
42 : False,
43 : False,
44 : False,
45 : False,
46 : False,
47 : True
07-05-2020 15:54:42 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_number) Certificate 48 column number
07-05-2020 15:54:42 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_types) Certificate column types: 
0 : object,
1 : object,
2 : object,
3 : object,
4 : object,
5 : object,
6 : object,
7 : object,
8 : object,
9 : object,
10 : datetime64[ns],
11 : datetime64[ns],
12 : datetime64[ns],
13 : datetime64[ns],
14 : datetime64[ns],
15 : datetime64[ns],
16 : datetime64[ns],
17 : datetime64[ns],
18 : object,
19 : object,
20 : object,
21 : object,
22 : object,
23 : object,
24 : object,
25 : object,
26 : object,
27 : object,
28 : int64,
29 : object,
30 : object,
31 : float64,
32 : object,
33 : object,
34 : object,
35 : object,
36 : object,
37 : object,
38 : object,
39 : object,
40 : object,
41 : object,
42 : object,
43 : object,
44 : object,
45 : object,
46 : object,
47 : object
07-05-2020 15:54:42 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_types) Wrong column types:
0 : object,
1 : object,
2 : object,
3 : object,
4 : object,
5 : object,
6 : object,
7 : object,
8 : object,
9 : object,
10 : datetime64[ns],
11 : datetime64[ns],
12 : datetime64[ns],
13 : datetime64[ns],
14 : datetime64[ns],
15 : datetime64[ns],
16 : datetime64[ns],
17 : datetime64[ns],
18 : object,
19 : object,
20 : object,
21 : object,
22 : object,
23 : object,
24 : object,
25 : object,
26 : object,
27 : object,
28 : int64,
29 : object,
30 : object,
31 : float64,
32 : object,
33 : object,
34 : object,
35 : object,
36 : object,
37 : object,
38 : object,
39 : object,
40 : object,
41 : object,
42 : object,
43 : object,
44 : object,
45 : object,
46 : object,
47 : object
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 64, in test_check_column_types
    self.assertEqual(self.column_types, cert_column_types)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1058, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1040, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [dtyp[358 chars]ype('int64'), dtype('O'), dtype('int64'), dtyp[224 chars]'O')] != [dtyp[358 chars]ype('O'), dtype('O'), dtype('int64'), dtype('O[220 chars]'O')]

First differing element 26:
dtype('int64')
dtype('O')

  [dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('<M8[ns]'),
   dtype('<M8[ns]'),
   dtype('<M8[ns]'),
   dtype('<M8[ns]'),
   dtype('<M8[ns]'),
   dtype('<M8[ns]'),
   dtype('<M8[ns]'),
   dtype('<M8[ns]'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
-  dtype('int64'),
?         ^^^^^

+  dtype('O'),
?         ^

   dtype('O'),
   dtype('int64'),
   dtype('O'),
   dtype('O'),
   dtype('float64'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O')]
07-05-2020 15:54:42 DEBUG tests.test_acceptance.acceptance_base_class (test_check_file_extension) Certificate xlsx file extension
