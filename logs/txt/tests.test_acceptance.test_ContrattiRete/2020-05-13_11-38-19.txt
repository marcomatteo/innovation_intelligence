13-05-2020 11:38:46 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_length) Certificate column lengths:
0 : 4,
1 : 173,
2 : 10,
3 : 13,
4 : 15,
5 : 773,
6 : 7,
7 : 11,
8 : 299,
9 : 1,
10 : 30,
11 : 2,
12 : 2,
13 : 2,
14 : 6,
15 : 21,
16 : 65,
17 : 65,
18 : 2
13-05-2020 11:38:46 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_length) Wrong length for oggetto column.Expected 255 
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 89, in test_check_column_length
    cert_check_length[i]
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1257, in assertGreaterEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: 255 not greater than or equal to 773
13-05-2020 11:38:46 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_length) Wrong length for denominazione impresa column.Expected 255 
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 89, in test_check_column_length
    cert_check_length[i]
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1257, in assertGreaterEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: 255 not greater than or equal to 299
13-05-2020 11:38:46 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_length) Found wrong column lengths for oggetto, denominazione impresa columns
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 101, in test_check_column_length
    self.assertTrue(len(invalid_column_list) == 0)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 705, in assertTrue
    raise self.failureException(msg)
AssertionError: False is not true
13-05-2020 11:38:46 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Certificate column nullables:
0 : False,
1 : False,
2 : False,
3 : True,
4 : True,
5 : True,
6 : False,
7 : False,
8 : False,
9 : True,
10 : False,
11 : False,
12 : False,
13 : False,
14 : False,
15 : True,
16 : True,
17 : True,
18 : False
13-05-2020 11:38:46 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Wrong setup for numero repertorio column.Expected nullable False not True 
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 128, in test_check_column_nullables
    self.assertFalse(cert_check_nullables[num])
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 699, in assertFalse
    raise self.failureException(msg)
AssertionError: True is not false
13-05-2020 11:38:46 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Wrong setup for numero atto column.Expected nullable False not True 
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 128, in test_check_column_nullables
    self.assertFalse(cert_check_nullables[num])
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 699, in assertFalse
    raise self.failureException(msg)
AssertionError: True is not false
13-05-2020 11:38:46 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_nullables) Found wrong column nullables for numero repertorio, numero atto columns
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 138, in test_check_column_nullables
    self.assertTrue(len(invalid_column_list) == 0)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 705, in assertTrue
    raise self.failureException(msg)
AssertionError: False is not true
13-05-2020 11:38:46 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_number) Certificate 19 column number
13-05-2020 11:38:46 DEBUG tests.test_acceptance.acceptance_base_class (test_check_column_types) Certificate column types: 
0 : int64,
1 : object,
2 : datetime64[ns],
3 : object,
4 : object,
5 : object,
6 : object,
7 : object,
8 : object,
9 : object,
10 : object,
11 : object,
12 : object,
13 : object,
14 : object,
15 : object,
16 : object,
17 : object,
18 : object
13-05-2020 11:38:46 ERROR tests.test_acceptance.acceptance_base_class (test_check_column_types) Wrong column types:
0 : int64,
1 : object,
2 : datetime64[ns],
3 : object,
4 : object,
5 : object,
6 : object,
7 : object,
8 : object,
9 : object,
10 : object,
11 : object,
12 : object,
13 : object,
14 : object,
15 : object,
16 : object,
17 : object,
18 : object
Traceback (most recent call last):
  File "C:\Users\buzzulini\Documents\GitHub\I2FVG_scripts\innovation_intelligence\tests\test_acceptance\acceptance_base_class.py", line 61, in test_check_column_types
    self.assertEqual(expected_column_types, cert_column_types)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 852, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1058, in assertListEqual
    self.assertSequenceEqual(list1, list2, msg, seq_type=list)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 1040, in assertSequenceEqual
    self.fail(msg)
  File "C:\Users\buzzulini\.conda\envs\envWorking\lib\unittest\case.py", line 693, in fail
    raise self.failureException(msg)
AssertionError: Lists differ: [dtype('O'), dtype('O'), dtype('<M8[ns]'), dtype([180 chars]'O')] != [dtype('int64'), dtype('O'), dtype('<M8[ns]'), dt[184 chars]'O')]

First differing element 0:
dtype('O')
dtype('int64')

- [dtype('O'),
?         ^

+ [dtype('int64'),
?         ^^^^^

   dtype('O'),
   dtype('<M8[ns]'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O'),
   dtype('O')]
13-05-2020 11:38:46 DEBUG tests.test_acceptance.acceptance_base_class (test_check_file_extension) Certificate xlsx file extension
